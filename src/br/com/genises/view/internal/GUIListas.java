/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.genises.view.internal;

import br.com.genises.dao.DaoUsuarioLista;
import br.com.genises.model.UsuarioLista;
import br.com.genises.model.UsuarioListaItens;
import br.com.genises.view.GUIPrincipal;
import br.com.genises.view.exception.NegocioException;
import br.com.genises.view.util.mensages.JOptionPaneUtil;
import br.com.genises.view.util.tablemodel.ListaTableModel;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Tiago
 */
public class GUIListas extends javax.swing.JDialog {

    /**
     * Creates new form GUIListas
     */
    private JInternalFrame frame;
    private ListaTableModel tmLista;
    private List<String> campos;
    private String classe;
    private List<UsuarioLista> listas;

    public GUIListas(JInternalFrame parent, List<String> campos) {

        this.frame = parent;
        this.campos = campos;
        if (parent instanceof GUIUsuario) {
            try {
                classe = "Usuario.class";

                DaoUsuarioLista d = new DaoUsuarioLista();
                tmLista = new ListaTableModel(d.pesquisaListaUsuario(GUIPrincipal.usuarioLogado.getId(), classe));
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Não foi possivel buscar as listas! " + ex.getMessage());
            }
        }
         if (parent instanceof GUIPlanoConta) {
            try {
                classe = "PlanoConta.class";

                DaoUsuarioLista d = new DaoUsuarioLista();
                tmLista = new ListaTableModel(d.pesquisaListaUsuario(GUIPrincipal.usuarioLogado.getId(), classe));
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Não foi possivel buscar as listas! " + ex.getMessage());
            }
        }
          if (parent instanceof GUIFornecedor) {
            try {
                classe = "Fornecedor.class";

                DaoUsuarioLista d = new DaoUsuarioLista();
                tmLista = new ListaTableModel(d.pesquisaListaUsuario(GUIPrincipal.usuarioLogado.getId(), classe));
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Não foi possivel buscar as listas! " + ex.getMessage());
            }
        }

        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tLista = new javax.swing.JTable();
        btUtilizar = new javax.swing.JButton();
        btAdicionar = new javax.swing.JButton();
        btExcluir = new javax.swing.JButton();
        btPadrao = new javax.swing.JButton();
        btFechar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("SyS Genesis - Listas");
        setModal(true);

        tLista.setModel(tmLista);
        jScrollPane1.setViewportView(tLista);

        btUtilizar.setText("UTILIZAR");
        btUtilizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btUtilizarActionPerformed(evt);
            }
        });

        btAdicionar.setText("ADICIONAR");
        btAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAdicionarActionPerformed(evt);
            }
        });

        btExcluir.setText("EXCLUIR");
        btExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluirActionPerformed(evt);
            }
        });

        btPadrao.setText("PADRÃO");
        btPadrao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPadraoActionPerformed(evt);
            }
        });

        btFechar.setText("FECHAR");
        btFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFecharActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btPadrao, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btExcluir, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btAdicionar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                    .addComponent(btUtilizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btFechar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btUtilizar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                        .addComponent(btPadrao, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btFechar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAdicionarActionPerformed
        try {
            String nome = JOptionPane.showInputDialog(this, "Digite o nome da lista: ");
            while (nome.equals("")) {
                nome = JOptionPane.showInputDialog(this, "Digite o nome da lista: ");
            }
            UsuarioLista u = new UsuarioLista();
            u.setNome(nome);
            u.setClasse(classe);
            u.setPadrao(false);
            List<UsuarioListaItens> itens = new ArrayList<UsuarioListaItens>();
            for (String a : campos) {
                UsuarioListaItens item = new UsuarioListaItens();
                item.setCampo(a);
                itens.add(item);
            }
            u.setItens(itens);
            u.setUsuario(GUIPrincipal.usuarioLogado);
            DaoUsuarioLista dao = new DaoUsuarioLista();
            dao.salvaLista(u);
            pesquisar();
        } catch (NegocioException ex) {
            JOptionPaneUtil.messageInformation(ex.getMessage());
        } catch (Exception ex) {
            JOptionPaneUtil.messageError(ex.getMessage());
        }
    }//GEN-LAST:event_btAdicionarActionPerformed

    private void btFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFecharActionPerformed
        this.dispose();
    }//GEN-LAST:event_btFecharActionPerformed

    private void btUtilizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btUtilizarActionPerformed
        try {
            int linhaSelecionada = tLista.getSelectedRow();
            if (linhaSelecionada == -1) {
                throw new Exception("Selecione uma lista!");
            }
            if (frame instanceof GUIUsuario) {
                GUIUsuario guiUsuario = (GUIUsuario) frame;
                DaoUsuarioLista dao = new DaoUsuarioLista();
                guiUsuario.atualizaTabela(dao.listasCamposListaPadrao(tmLista.getListas().get(linhaSelecionada).getId()));
            }
            this.dispose();
        } catch (NegocioException ex) {
            JOptionPaneUtil.messageInformation(ex.getMessage());
        } catch (Exception ex) {
            JOptionPaneUtil.messageError(ex.getMessage());
        }
    }//GEN-LAST:event_btUtilizarActionPerformed

    private void btPadraoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPadraoActionPerformed
        try {
            int linhaSelecionada = tLista.getSelectedRow();
            if (linhaSelecionada == -1) {
                throw new Exception("Selecione uma lista!");
            }
            tmLista.tornaPadrao(linhaSelecionada);
        } catch (NegocioException ex) {
            JOptionPaneUtil.messageInformation(ex.getMessage());
        } catch (Exception ex) {
            JOptionPaneUtil.messageError(ex.getMessage());
        }
    }//GEN-LAST:event_btPadraoActionPerformed

    private void btExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirActionPerformed
        try {
            int linhaSelecionada = tLista.getSelectedRow();
            DaoUsuarioLista dao = new DaoUsuarioLista();
            dao.excluir(tmLista.getLista(linhaSelecionada).getId());
            pesquisar();
        } catch (NegocioException ex) {
            JOptionPaneUtil.messageInformation(ex.getMessage());
        } catch (Exception ex) {
            JOptionPaneUtil.messageError(ex.getMessage());
        }
    }//GEN-LAST:event_btExcluirActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAdicionar;
    private javax.swing.JButton btExcluir;
    private javax.swing.JButton btFechar;
    private javax.swing.JButton btPadrao;
    private javax.swing.JButton btUtilizar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tLista;
    // End of variables declaration//GEN-END:variables

    private void pesquisar() {
        try {
            if (!tmLista.getListas().isEmpty()) {
                tmLista.limpar();
            }

            DaoUsuarioLista d = new DaoUsuarioLista();
            tmLista.addListaDelista(d.pesquisaListaUsuario(GUIPrincipal.usuarioLogado.getId(), classe));

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Não foi possivel buscar as listas! " + ex.getMessage());
        }
    }

    public JInternalFrame getFrame() {
        return frame;
    }

    public void setFrame(JInternalFrame frame) {
        this.frame = frame;
    }

}
