/*
 * Here comes the text of your license
 * Each line should be prefixed with  * 
 */
package br.com.genises.view.internal;

import br.com.genises.model.Cidade;
import br.com.genises.model.Contador;
import br.com.genises.negocio.BCidade;
import br.com.genises.negocio.BContador;
import br.com.genises.util.validacoes.UpperCaseDocument;
import br.com.genises.util.validacoes.ValidaCPF;
import java.sql.Date;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;

/**
 *
 * @author rober
 */
public class GUICadastroContador extends javax.swing.JInternalFrame {

    /**
     * Creates new form GUICadastroContador
     */
    Contador contadorR = new Contador();

    public GUICadastroContador(Contador contador) {
        initComponents();
        tfCPF.setFocusLostBehavior(JFormattedTextField.COMMIT);
        formatarDatas();
//        tfDataEmissaoCRC.setFocusLostBehavior(JFormattedTextField.COMMIT);
//        tfDataEmissaoRg.setFocusLostBehavior(JFormattedTextField.COMMIT);

        upperCase();
        contadorR = contador;
        verificaExistencia(contadorR);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        tfNome = new javax.swing.JTextField();
        tfEndereco = new javax.swing.JTextField();
        tfBairro = new javax.swing.JTextField();
        cbUf = new javax.swing.JComboBox();
        tfEmail = new javax.swing.JTextField();
        tfRg = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        tfCep = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        cbCidade = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        tfCrc = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        cbUfCrc = new javax.swing.JComboBox();
        jLabel17 = new javax.swing.JLabel();
        bGravar = new javax.swing.JButton();
        bCancelar = new javax.swing.JButton();
        tfCPF = new javax.swing.JFormattedTextField();
        tfTelefone = new javax.swing.JFormattedTextField();
        tfCelular = new javax.swing.JFormattedTextField();
        tfDataEmissaoCRC = new javax.swing.JFormattedTextField();

        jToolBar1.setRollover(true);

        setClosable(true);
        setTitle("Sistema Gênises - Cadastro do Contador");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Contador"));

        jLabel1.setText("Nome:");

        jLabel2.setText("Endereço:");

        jLabel3.setText("Bairro:");

        jLabel4.setText("UF:");

        jLabel5.setText("Telefone:");

        jLabel6.setText("Email:");

        jLabel7.setText("CPF:");

        jLabel8.setText("RG:");

        cbUf.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione...", "AC", "AL", "AM", "AP", "BA", "CE", "DF", "ES", "GO", "MA", "MG", "MS", "MT", "PA", "PB", "PE", "PI", "PR", "RJ", "RN", "RO", "RR", "RS", "SC", "SE", "SP", "TO" }));
        cbUf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbUfActionPerformed(evt);
            }
        });

        jLabel9.setText("CEP:");

        jLabel10.setText("Cidade:");

        cbCidade.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel11.setText("Celular:");

        jLabel12.setText("CRC:");

        jLabel14.setText("UF:");

        cbUfCrc.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione...", "AC", "AL", "AM", "AP", "BA", "CE", "DF", "ES", "GO", "MA", "MG", "MS", "MT", "PA", "PB", "PE", "PI", "PR", "RJ", "RN", "RO", "RR", "RS", "SC", "SE", "SP", "TO" }));

        jLabel17.setText("Data Emissão:");

        bGravar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/genises/util/imagens/salvar icone_vectorized.png"))); // NOI18N
        bGravar.setText("Gravar");
        bGravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bGravarActionPerformed(evt);
            }
        });

        bCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/genises/util/imagens/fechar_vectorized_1.png"))); // NOI18N
        bCancelar.setText("Cancelar");
        bCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCancelarActionPerformed(evt);
            }
        });

        try {
            tfCPF.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        tfCPF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfCPFFocusLost(evt);
            }
        });

        try {
            tfTelefone.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(0xx##)####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            tfCelular.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(0xx##)####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        tfDataEmissaoCRC.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel12)
                    .addComponent(jLabel7)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(tfBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jLabel9)
                            .addGap(1188, 1188, 1188))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(cbUf, 0, 176, Short.MAX_VALUE)
                                        .addComponent(tfTelefone))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel11)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(tfCelular, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(0, 0, Short.MAX_VALUE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel10)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(cbCidade, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                .addComponent(tfCep, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(tfEndereco, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tfNome, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(1098, 1098, 1098)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(tfCrc, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbUfCrc, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel17)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfDataEmissaoCRC))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(tfCPF)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfRg, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(tfEmail, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(127, 127, 127)
                .addComponent(bGravar)
                .addGap(18, 18, 18)
                .addComponent(bCancelar))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(tfNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(tfEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel9)
                            .addComponent(tfCep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfBairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cbUf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(cbCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel11)
                    .addComponent(tfTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfCelular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6)
                    .addComponent(tfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(tfRg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(tfCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(tfCrc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(cbUfCrc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17)
                    .addComponent(tfDataEmissaoCRC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bCancelar)
                    .addComponent(bGravar))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 505, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbUfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbUfActionPerformed

        try {
            if (cbUf.getSelectedItem().equals("Selecione...")) {

            } else {
                BCidade bCidade = new BCidade();
                List<Cidade> cidades = new ArrayList<>();
                String uf = (String) cbUf.getSelectedItem();
                cidades = bCidade.buscaCidade(uf);
                cbCidade.setEnabled(true);
                carregarCidades(cidades);
                cbCidade.requestFocus();
            }
        } catch (Exception ex) {

        }
// TODO add your handling code here:
    }//GEN-LAST:event_cbUfActionPerformed

    private void tfCPFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfCPFFocusLost
        if (tfCPF.getText().trim().equals("")) {

        } else {
            
            if (ValidaCPF.isCPF(tfCPF.getText().replace("-", "").replace(".", "")) == false) {
                JOptionPane.showMessageDialog(null, "O CPF informado não é válido!");
                tfCPF.requestFocus();
            }

        }

// TODO add your handling code here:
    }//GEN-LAST:event_tfCPFFocusLost

    private void bGravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bGravarActionPerformed
        try {
            validarCampos();
            gravar();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            System.out.println(ex.getMessage());
        }
    }//GEN-LAST:event_bGravarActionPerformed

    private void bCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCancelarActionPerformed
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_bCancelarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bCancelar;
    private javax.swing.JButton bGravar;
    private javax.swing.JComboBox cbCidade;
    private javax.swing.JComboBox cbUf;
    private javax.swing.JComboBox cbUfCrc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTextField tfBairro;
    private javax.swing.JFormattedTextField tfCPF;
    private javax.swing.JFormattedTextField tfCelular;
    private javax.swing.JTextField tfCep;
    private javax.swing.JTextField tfCrc;
    private javax.swing.JFormattedTextField tfDataEmissaoCRC;
    private javax.swing.JTextField tfEmail;
    private javax.swing.JTextField tfEndereco;
    private javax.swing.JTextField tfNome;
    private javax.swing.JTextField tfRg;
    private javax.swing.JFormattedTextField tfTelefone;
    // End of variables declaration//GEN-END:variables

    private void carregarCidades(List<Cidade> cidades) {
        cbCidade.removeAllItems();
        cbCidade.addItem("Selecione...");
        try {
            for (int i = 0; i < cidades.size(); i++) {

                cbCidade.addItem(cidades.get(i).getCidade());
                cbCidade.setSelectedIndex(0);
            }
        } catch (Exception ex) {
            Logger.getLogger(GUICadastroIgreja.class
                    .getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void verificaExistencia(Contador contadorR) {

        if (contadorR.getId() != 0) {
            carregarDados();

        } else {

        }

    }

    private void validarCampos() throws Exception {

        if (tfNome.getText().trim().equals("")) {
            tfNome.requestFocus();
            throw new Exception("DIGITE O NOME!");

        }
        if (tfEndereco.getText().trim().equals("")) {
            tfEndereco.requestFocus();
            throw new Exception("DIGITE O ENDEREÇO!");
        }
        if (tfBairro.getText().trim().equals("")) {
            tfBairro.requestFocus();
            throw new Exception("DIGITE O BAIRRO!");
        }
        if (tfCep.getText().trim().equals("")) {
            tfCep.requestFocus();
            throw new Exception("DIGITE O CEP!");
        }
        if (cbUf.getSelectedItem().equals("Selecione...")) {
            cbUf.requestFocus();
            throw new Exception("SELECIONE UM ESTADO!");
        }
        if (cbCidade.getSelectedItem().equals("Selecione...")) {
            cbCidade.requestFocus();
            throw new Exception("SELECIONE UMA CIDADE!");
        }
        if (tfTelefone.getText().equals("(0xx  )    -    ")) {
            tfTelefone.requestFocus();
            throw new Exception("INFORME UM NUMERO DE TELEFONE!");
        }
        if (tfCelular.getText().equals("(0xx  )    -    ")) {
            tfCelular.requestFocus();
            throw new Exception("INFORME UM NUMERO DE CELULAR!");
        }
        if (tfEmail.getText().trim().equals("")) {
            tfEmail.requestFocus();
            throw new Exception("INFORME UM ENDEREÇO DE EMAIL!");
        }
        if (tfCPF.getText().trim().equals("")) {
            tfCPF.requestFocus();
            throw new Exception("INFORME UM CNPJ VÁLIDO!");
        }
        if (tfCrc.getText().trim().equals("")) {
            tfCrc.requestFocus();
            throw new Exception("INFORME UM CRC VÁLIDO!");
        }
        if (cbUfCrc.getSelectedItem().equals("Selecione...")) {
            cbUfCrc.requestFocus();
            throw new Exception("INFORME O UF QUE FOI EMITIDO O CRC!");
        }
        if (tfDataEmissaoCRC.getText() == null) {
            tfDataEmissaoCRC.requestFocus();
            throw new Exception("INFORME A DATA DE EMISSÃO DO CRC!");
        }
        if (tfRg.getText().trim().equals("")) {
            tfRg.requestFocus();
            throw new Exception("INFORME UM RG VÁLIDO!");
        }

    }

    private void gravar() throws ParseException, Exception {
        Contador contador = new Contador();
        Cidade cidade = new Cidade();
        BContador bContador = new BContador();

        cidade.setCidade((String) cbCidade.getSelectedItem());
        cidade.setUf((String) cbUf.getSelectedItem());

        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
//        String dataCrc = tfDataEmissaoCRC.getText();
//        Calendar calCrc = Calendar.getInstance();
//        calCrc.setTime(sdf.parse(dataCrc));

//        String dataRg = tfDataEmissaoRg.getText();
//        Calendar calRg = Calendar.getInstance();
//        calRg.setTime(sdf.parse(dataRg));
        contador.setNome(tfNome.getText());
        contador.setEndereco(tfEndereco.getText());
        contador.setBairro(tfBairro.getText());
        contador.setCep(tfCep.getText());
        contador.setCidade(cidade);
        contador.setTelefone(tfTelefone.getText());
        contador.setCelular(tfCelular.getText());
        contador.setEmail(tfEmail.getText());
        contador.setCpf(tfCPF.getText().replace(".", "").replace("-", ""));
        contador.setCrc(tfCrc.getText());
        contador.setUfCrc((String) cbUfCrc.getSelectedItem());

        String dataEmissao = tfDataEmissaoCRC.getText();
        SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");

        
        java.util.Date dataEmissaoForm = formato.parse(dataEmissao);
        contador.setEmissaoCrc(dataEmissaoForm);

        contador.setRg(tfRg.getText());

        if (contadorR.getId() == 0) {
            bContador.gravar(contador);
            JOptionPane.showMessageDialog(null, "Cadastro realizado com sucesso!");
        } else {
            contador.setId(contadorR.getId());
            bContador.alterar(contador);
            JOptionPane.showMessageDialog(null, "Alteração realizada com sucesso!");
        }

    }

    private void carregarDados() {
        tfNome.setText(contadorR.getNome());
        tfEndereco.setText(contadorR.getEndereco());
        tfBairro.setText(contadorR.getBairro());
        tfCep.setText(contadorR.getCep());
        cbUf.setSelectedItem(contadorR.getCidade().getUf());
        cbCidade.setSelectedItem(contadorR.getCidade().getCidade());
        tfTelefone.setText(contadorR.getTelefone());
        tfCelular.setText(contadorR.getCelular());
        tfEmail.setText(contadorR.getEmail());
        tfCPF.setText(contadorR.getCpf());
        tfCrc.setText(contadorR.getCrc());
        cbUfCrc.setSelectedItem(contadorR.getUfCrc());

 	SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        
        String data = sdf.format(contadorR.getEmissaoCrc());
        
        tfDataEmissaoCRC.setText(data);

        tfRg.setText(contadorR.getRg());

//        String dataEmissaoRG = s.format(contadorR.getDataEmissao().getTime());
//        tfDataEmissaoRg.setText(dataEmissaoRG);
    }

    private void upperCase() {
        tfNome.setDocument(new UpperCaseDocument());
        tfBairro.setDocument(new UpperCaseDocument());
        tfEndereco.setDocument(new UpperCaseDocument());
        tfEmail.setDocument(new UpperCaseDocument());

    }

    private void limparDados() {
        tfNome.setText(null);
        tfEndereco.setText(null);
        tfBairro.setText(null);
        tfCep.setText(null);
        cbUf.setSelectedItem(contadorR.getCidade().getUf());
        cbCidade.setSelectedItem(contadorR.getCidade().getCidade());
        tfTelefone.setText(contadorR.getTelefone());
        tfCelular.setText(contadorR.getCelular());
        tfEmail.setText(contadorR.getEmail());
        tfCPF.setText(contadorR.getCpf());
        tfCrc.setText(contadorR.getCrc());
        cbUfCrc.setSelectedItem(contadorR.getUfCrc());

        tfDataEmissaoCRC.setText(null);

        tfRg.setText(contadorR.getRg());

    }

    private void formatarDatas() {
        Date dataAtualMin = new Date(System.currentTimeMillis());
    }
}
